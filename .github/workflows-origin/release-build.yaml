name: Publish release images
on:
  push:
    branches:
      - master
    tags:
      - 'v*'
      - 'dev*'
env:
  GO111MODULE: on

jobs:
  publish_release_images:
    name: Release
    strategy:
      fail-fast: false
      matrix:
        flavour:
          - ubuntu
          - alpine3.11
          - alpine3.12
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Build '${{ matrix.flavour }}' image
        env:
          FLAVOUR: ${{ matrix.flavour }}
          IMAGE_NAME: flant/shell-operator
        run: |
          : Setup imageTag, appVersion and dockerFile envs and build image
          imageTag=
          appVersion=
          dockerFile=Dockerfile

          if [[ ${GITHUB_REF} == "refs/heads/master" ]] ; then
            # master branch
            imageTag=${IMAGE_NAME}:latest
            appVersion=master-${GITHUB_SHA::8}-$FLAVOUR-$(date +'%Y.%m.%d_%H:%M:%S')
          else
            gitTag=${GITHUB_REF#refs/tags/}
            imageTag=${IMAGE_NAME}:${gitTag}
            appVersion=${gitTag}
          fi

          case $FLAVOUR in
          alpine3.11)
            dockerFile="Dockerfile-alpine3.11"
            imageTag=${imageTag}-alpine3.11
            ;;
          alpine3.12)
            dockerFile="Dockerfile-alpine3.12"
            imageTag=${imageTag}-alpine3.12
            ;;
          esac

          echo Build $imageTag with version $appVersion using ./$dockerFile
          docker build --build-arg appVersion=$appVersion -t $imageTag -f $dockerFile .

          # save imageTag for docker push
          echo ::set-env name=imageTag::${imageTag}

      - name: Push '${{ matrix.flavour }}' image
        run: |
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
          docker push $imageTag
